---
import type { MarkdownInstance } from 'astro';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import GlobalContainer from '../components/GlobalContainer.astro';
import Header from '../components/Header.astro';
import PostList from '../components/PostList.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../config';
import type IFrontmatter from '../types/IFrontmatter';

// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (
  (await Astro.glob('./posts/*.{md,mdx}')) as MarkdownInstance<Record<string, any> & IFrontmatter>[]
)
  .sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf())
  .slice(0, 10);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <script>
      window.location.pathname = '/posts/1';
    </script>
  </head>
  <GlobalContainer>
    <Header />
    <main>
      <PostList posts={posts} />
    </main>
    <Footer />
  </GlobalContainer>
</html>
